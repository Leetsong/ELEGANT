public class com.example.Example extends java.lang.Object
{
    public static final int MAX_SIZE;

    static void <clinit>()
    {
        <com.example.Example: int MAX_SIZE> = 100;

        return;
    }

    public boolean isCompatible()
    {
        com.example.Example this;

        this := @this: com.example.Example;

        goto label1;

     label1:
        return 1;
    }

    public int go()
    {
        com.example.Example this;
        int mul, i, temp$1, temp$3;

        this := @this: com.example.Example;

        mul = 1;

        i = 1;

     label1:
        if i <= 100 goto label2;

        goto label3;

     label2:
        temp$1 = mul * i;

        mul = temp$1;

        temp$3 = i + 1;

        i = temp$3;

        goto label1;

     label3:
        return mul;
    }

    public void goWithChecking()
    {
        com.example.Example this;
        boolean temp$0;

        this := @this: com.example.Example;

        temp$0 = virtualinvoke this.<com.example.Example: boolean isCompatible()>();

        if temp$0 == 0 goto label2;

        goto label1;

     label1:
        virtualinvoke this.<com.example.Example: int go()>();

     label2:
        return;
    }

    public void goWithoutChecking()
    {
        com.example.Example this;

        this := @this: com.example.Example;

        virtualinvoke this.<com.example.Example: int go()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        com.example.Example temp$0;

        args := @parameter0: java.lang.String[];

        temp$0 = new com.example.Example;

        specialinvoke temp$0.<com.example.Example: void <init>()>();

        virtualinvoke temp$0.<com.example.Example: void goWithoutChecking()>();

        virtualinvoke temp$0.<com.example.Example: void goWithChecking()>();

        return;
    }

    public void <init>()
    {
        com.example.Example this;

        this := @this: com.example.Example;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }
}
